{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"LICENSE/","title":"LICENSE","text":"<pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <pre><code>  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n</code></pre> <p>Copyright [yyyy] [name of copyright owner]</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\");    you may not use this file except in compliance with the License.    You may obtain a copy of the License at</p> <pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</p>"},{"location":"","title":"workstation_setup","text":"<p>Scripts to capture my workstation setups</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>Install pre-requirements:</p> <pre><code>sudo apt install -y git python3-pip\ngit clone git@github.com:athackst/workstation_setup.git\n</code></pre>"},{"location":"#install-and-setup-workstation","title":"Install and setup workstation","text":"<p>Installs the basics of my workstation with make</p> <pre><code>./install.sh\n</code></pre>"},{"location":"#develop","title":"Develop","text":"<p>I have been playing with the idea of doing all/most development inside of docker containers.</p> <ul> <li>examples for example development processes</li> </ul> <p>Dockerfiles have been moved to athackst/dockerfiles</p>"},{"location":"#get-the-aliases-in-a-container","title":"Get the aliases in a container","text":"<pre><code>RUN wget -O /etc/profile.d/git_aliases.sh https://github.com/athackst/workstation_setup/raw/main/user/.aliases/git_aliases.sh \\\n    &amp;&amp; echo \"source /etc/profile.d/git_aliases.sh\" &gt;&gt; \"/home/vscode/.bashrc\"\n</code></pre>"},{"location":"scripts/get_google_drive_file/","title":"Get google drive file","text":""},{"location":"scripts/get_google_drive_file/#download-a-google-drive-file","title":"Download a google drive file","text":"<p>This python script downloads a file from google drive using teh file ID obtained from a shareable link.</p>"},{"location":"scripts/get_google_drive_file/#usage","title":"Usage","text":"<ol> <li>Obtain the file ID from the shareable link of the file.</li> <li>Run the script with the following command:    <pre><code>python google_drive.py file_id destination_file_path\n</code></pre></li> <li>The file will be saved in the destination path.</li> </ol>"},{"location":"scripts/get_google_drive_file/#notes","title":"Notes","text":"<ul> <li>The script will overwrite existing files with the same name.</li> <li>The script will not work for files that are not shared.</li> <li>To share a file, click on the share button on the top right corner of the file and click on \"Get shareable link\".</li> </ul>"},{"location":"scripts/keep_to_obsidian/","title":"Keep to obsidian","text":""},{"location":"scripts/keep_to_obsidian/#export-google-keep-notes-to-obsidian","title":"Export Google Keep notes to Obsidian","text":"<p>This script converts a Google Keep JSON export file to Markdown files that can be imported into Obsidian.</p>"},{"location":"scripts/keep_to_obsidian/#usage","title":"Usage","text":"<ol> <li>Export your Google Keep notes to JSON format. See Google Takeout for instructions.</li> <li>Extract your Google Keep export file to the google_keep folder.</li> <li>Open a terminal and run the script with the following command:    <pre><code>python keep_to_obsidian.py --input path/to/google_keep_export -- output path/to/obsidian_export\n</code></pre></li> <li>Markdown files will be saved in the Obsidian export folder.</li> </ol>"},{"location":"scripts/keep_to_obsidian/#notes","title":"Notes","text":"<ul> <li>The script will create the Obsidian export folder if it doesn't exist.</li> <li>The script will overwrite existing Markdown files with the same name.</li> <li>The script will decode HTML entities in the note content.</li> <li>The script will use 'Untitled' as the note title if the note doesn't have a title.</li> <li>The script will ignore notes that don't have any content.</li> <li>The script will ignore notes that don't have a <code>textContent</code> field.</li> </ul>"},{"location":"programs/","title":"Programs","text":"<p>These are scripts that can be run as an executable once installed.</p> <p>It's a convenient way to add scripts to the program list.  The program list allows for tab completion in the terminal.</p>"},{"location":"programs/#installation","title":"Installation","text":"<p>To install just run pip install</p> <pre><code>pip install .\n</code></pre>"},{"location":"programs/#usage","title":"Usage","text":""},{"location":"programs/#docker-decendents","title":"docker-decendents","text":"<p>Get all of the decendent images of a docker image</p>"},{"location":"programs/#docker-services-start","title":"docker-services-start","text":"<p>Start all of my core docker servies like registry, notes, and watchtower</p>"},{"location":"programs/#docker-services-stop","title":"docker-services-stop","text":"<p>Stop all of my docker services to keep them from restarting</p>"},{"location":"programs/#docker-services-update","title":"docker-services-update","text":"<p>Run the watchtower update once on command.</p>"},{"location":"programs/#gif-gen","title":"gif-gen","text":"<p>Generates a gif from a video, including automatic \"good\" compression</p> <pre><code>gif-gen -h\n</code></pre>"},{"location":"programs/#update-docker-images","title":"update-docker-images","text":"<p>Updates (pulls) the docker images I want to have on my system.</p>"},{"location":"programs/#user-config-diff","title":"user-config-diff","text":"<p>Diffs my configuration with the one in this package<sup>1</sup>.</p>"},{"location":"programs/#user-config-update","title":"user-config-update","text":"<p>Update the user config in this package with my system config<sup>1</sup>.</p> <ol> <li> <p>Location of this project must be in ~/Code\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"examples/","title":"Example workspaces","text":"<p>Here are some example workspace setups</p>"},{"location":"examples/#multi-stage-docker-build-multistage","title":"Multi stage docker build (multistage)","text":"<p>This will build and compile your code into a small output image by building your code during dockerfile creation.</p> <p>Pros:</p> <ul> <li>One file defines everything you need to create the image</li> <li>Repeatability built in</li> </ul> <p>Cons:</p> <ul> <li>Takes longer to compile when a file changes (about the same as building from scratch)</li> </ul>"},{"location":"examples/#docker-development-environment-copied-into-final-image-dev_release","title":"Docker development environment copied into final image (dev_release)","text":"<p>This will build the workspace on your host machine using a docker image as the development environment.</p> <p>Pros:</p> <ul> <li>Fastest re-build time because you can use cmake cache</li> <li>Small output image possible by passing targets into final image</li> </ul> <p>Cons:</p> <ul> <li>Requires multiple dockerfiles to set up</li> <li>Not as repeatable (your local cache may affect build)</li> </ul>"},{"location":"examples/#docker-development-through-vs-code-dev_release_vscode","title":"Docker development through VS Code (dev_release_vscode)","text":"<p>This will use the VS Code docker container plugin as the basis of development.</p> <p>Under-the-hood, vscode is running a docker container and mounting your source code into it. This gives you all the tooling you need to build your code and can enable standardization of tooling including linters.  It also seamlessly integrates with IntelliSense (which is all sorts of awesome) and enables debugging through traditional debuggers ie gdb.</p> <p>It seems to follow the develop-release pattern with docker, where a develop container is created for compiling and a then the built assets can be copied into a deployment container.  It is also possible to support multi-stage, but development would be in a docker-in-docker configuration.</p> <p>Pros:</p> <ul> <li>All developers using the same tools (including linters, etc) in an easy to share setup</li> <li>Supported IDE functionalities such as intellisense, code following, debugging, etc.</li> </ul> <p>Cons:</p> <ul> <li>Built targets have \"root\" permissions unless you've updated your base docker image to have your user name/group.</li> </ul>"},{"location":"examples/#bazel-workspace-with-vs-code-bazel","title":"Bazel workspace with VS Code (bazel)","text":"<p>This will use a VS Code docker container plugin as the basis of development for a bazel environment.</p>"},{"location":"examples/#ros-melodic-workspace-ros_melodic_vscode","title":"ROS melodic workspace (ros_melodic_vscode)","text":"<p>This is similar to the vscode_ros2_workspace but for ROS1.</p> <ul> <li>[ ] TODO: Make this its own template.</li> </ul>"},{"location":"examples/bazel/","title":"bazel","text":"<p>An example workspace with bazel.</p>"},{"location":"examples/bazel/#installation","title":"Installation","text":"<p>You'll need the following packages installed:</p> <ul> <li>vscode</li> <li>docker</li> </ul>"},{"location":"examples/bazel/#usage","title":"Usage","text":"<p>Open this directory in vscode</p> <pre><code>code workstation_setup/examples/bazel\n</code></pre>"},{"location":"examples/bazel/#set-up-your-workspace","title":"Set up your workspace","text":"<p>Run the get_code script, then open this folder in vscode.</p> <pre><code>./get_code.sh\n</code></pre> <p>This will download the bazel example code repository.</p> <p>See bazel tutorials</p>"},{"location":"examples/bazel/#build","title":"Build","text":""},{"location":"examples/bazel/#tasks","title":"Tasks","text":"<p>Go to Terminal-&gt;Run Build Task or type the shortcut command.</p> <p>Note</p> <p>The working directory for a running task needs to be set to the directory containing a <code>WORKSPACE</code> file.</p> <p>You can use vscode environment variables to set the worksapce</p> <pre><code>    {\n        \"label\": \"build stage1\",\n        \"type\": \"shell\",\n        \"options\": {\n            \"cwd\": \"${workspaceRoot}/examples/cpp-tutorial/stage1\"\n        },\n        \"command\": \"bazel build //main:hello-world\",\n        \"problemMatcher\": [\n            \"$gcc\"\n        ],\n        \"group\": \"build\"\n    },\n</code></pre>"},{"location":"examples/bazel/#command-line","title":"Command line","text":"<p>Follow the instructions in the  bazel tutorials</p> <pre><code>cd examples/cpp-tutorial/stage1\nbazel build :all\n</code></pre>"},{"location":"examples/dev_release_vscode/","title":"dev_release_vscode","text":"<p>This is an example using ros2 dashing + vscode + docker.</p>"},{"location":"examples/dev_release_vscode/#quick-start","title":"Quick start","text":"<ol> <li>Open this folder in vscode and load the container.</li> <li> <p>Download the example package</p> <pre><code>./get_code.sh\n</code></pre> </li> <li> <p>Build the code in the attached terminal.</p> <pre><code>colcon build\n</code></pre> </li> </ol>"},{"location":"examples/dev_release_vscode/#detailed-instructions","title":"Detailed instructions","text":""},{"location":"examples/dev_release_vscode/#get-the-example-code","title":"Get the example code","text":"<p>Run the script get_code to download the example code.</p> <pre><code>./get_code.sh\n</code></pre> <p>This will download the ROS packages listed in the <code>.rosinstall</code> file.</p> <p>Note: you can also run</p> <pre><code>mkdir -p src\nvcs import &lt; .rosinstall src\n</code></pre> <p>to get the sources listed in the .rosinstall package.</p>"},{"location":"examples/dev_release_vscode/#update-the-dockerfile-for-your-usergroup","title":"Update the dockerfile for your user/group","text":"<p>If you're user id/group is different than the default 1000/1000 for linux, you will need to edit the container with your user id/group.</p> <p>Note: To find your user id/group:</p> <p><code>bash id -u #user id ig -g #group id</code></p>"},{"location":"examples/dev_release_vscode/#open-the-folder-in-a-remote-container","title":"Open the folder in a remote container","text":"<p>Open the command pallet and select the <code>Remote-Containers: Open Folder in Container</code> option.</p> <p>VSCode will build the docker file and mount the folder into the container.</p> <p>From here, you can build the source by running the <code>build</code> task.</p> <pre><code>Terminal-&gt;Run Build task\n</code></pre> <p>This will run</p> <pre><code>colcon build\n</code></pre> <p>in the current working directory.</p>"},{"location":"examples/dev_release_vscode/#deployment","title":"Deployment","text":"<p>The deployment steps for this workflow are similar dev_release release workflow.  Development is performed in a different container than the release, where the build outputs are copied into the release container.</p> <p>Run the release script on the host computer.</p> <pre><code>./release.sh\n</code></pre> <p>This will build the release container by copying the built targets into the host into the /opt/docker folder.</p> <pre><code>docker build -f ./.releasecontainer/Dockerfile -t vscode/ros2:ros2_dashing_vscode .\n</code></pre> <p>You may want to change the tag name to fit your project.</p>"},{"location":"examples/ros_melodic_vscode/","title":"ros_melodic_vscode","text":"<p>This is an example/test workspace for ros melodic.</p>"},{"location":"examples/ros_melodic_vscode/#about","title":"About","text":"<p>This workspace is set up to test using a ros melodic dev container using the beginners tutorials from ROS.</p>"},{"location":"examples/ros_melodic_vscode/#installation","title":"Installation","text":"<p>You'll need the following packages installed:</p> <ul> <li>vscode</li> <li>docker</li> </ul>"},{"location":"examples/ros_melodic_vscode/#usage","title":"Usage","text":"<p>Open this directory in vscode</p> <pre><code>code workstation_setup/examples/ros_melodic_vscode\n</code></pre> <p>It will ask you if you'd like to open using a container.  Hit yes!</p>"},{"location":"examples/ros_melodic_vscode/#set-up-your-workspace","title":"Set up your workspace","text":"<p>The first thing you're going to want to do is set up your workspace.</p> <pre><code>wstool up\n</code></pre> <p>This will download the beginner tutorial code into your workspace.</p> <p>See ros beginner tutorials.</p>"},{"location":"examples/ros_melodic_vscode/#build","title":"Build","text":""},{"location":"examples/ros_melodic_vscode/#tasks","title":"Tasks","text":"<p>Go to Terminal-&gt;Run Build Task or type the shortcut command.</p>"},{"location":"examples/ros_melodic_vscode/#command-line","title":"Command line","text":"<p>Alternatively, you can build from the command line.</p> <pre><code>catkin build\n</code></pre>"},{"location":"examples/ros_melodic_vscode/#run","title":"Run","text":"<p>In order to run the tutorials, first you'll need to source your workspace.</p> <pre><code>source devel/setup.bash\n</code></pre> <p>Then run the tutorial you're interested in, for example</p> <pre><code>roslaunch roscpp_tutorials talker_listener.launch\n</code></pre>"},{"location":"examples/multistage/","title":"multistage","text":"<p>This is an example of a multi-stage dockerfile to produce a target image with custom built targets.</p>"},{"location":"examples/multistage/#quick-start","title":"Quick start","text":""},{"location":"examples/multistage/#build","title":"Build","text":"<pre><code>make\n</code></pre>"},{"location":"examples/multistage/#uninstall","title":"Uninstall","text":"<pre><code>make uninstall\n</code></pre>"},{"location":"examples/multistage/#step-by-step","title":"Step-by-step","text":""},{"location":"examples/multistage/#setup-your-workspace","title":"Setup your workspace","text":"<pre><code>mkdir -p src\ncp .rosinstall src/.rosinstall\nwstool up -t src\n</code></pre>"},{"location":"examples/multistage/#build-the-dockerfile","title":"Build the dockerfile","text":"<pre><code>docker build -f Dockerfile -t althack/ros2:crystal-example .\n</code></pre>"},{"location":"examples/dev_release/","title":"dev_release","text":"<p>This is an example of how to create a docker development workflow</p>"},{"location":"examples/dev_release/#quick-start","title":"Quick start","text":"<p>Run all the steps to get the code, build the development docker and build your code.</p> <pre><code>make\n</code></pre>"},{"location":"examples/dev_release/#set-up","title":"Set up","text":"<p>Set up your workspace</p> <pre><code>make setup\n</code></pre>"},{"location":"examples/dev_release/#build","title":"Build","text":"<p>Make the development environment docker</p> <pre><code>make docker\n</code></pre>"},{"location":"examples/dev_release/#install","title":"Install","text":"<p>Make the workspace using the development docker</p> <pre><code>make example\n</code></pre>"},{"location":"examples/dev_release/#step-by-step","title":"Step-by-step","text":""},{"location":"examples/dev_release/#set-up-your-workspace","title":"Set up your workspace","text":"<p>Create a directory to put your source code.</p> <p>example:</p> <pre><code>mkdir -p src\n</code></pre> <p>Clone the repositories you would like to build from source</p> <p>example:</p> <pre><code>cd src\ngit clone https://github.com/ros2/examples.git\n</code></pre>"},{"location":"examples/dev_release/#build-the-dockerfile","title":"Build the dockerfile","text":"<p>Edit the docker file to include all additional resources and build the development dockerfile.  This file is special because it is built with your user id/group/name.  This allows you to build within the docker workspace as yourself.</p> <pre><code>cd ~/workstation_setup/examples/ros2_crystal_example_dev\ndocker build -f develop.dockerfile -t althack/ros2:crystal-example-dev  --build-arg UID=$(id -u) --build-arg GID=$(id -g) --build-arg UNAME=$(whoami) .\n</code></pre>"},{"location":"examples/dev_release/#build-inside-the-docker-image","title":"Build inside the docker image","text":"<p>Run the docker image with the build function</p> <pre><code>cd ~/ros2_ws\ndocker run -v $HOME:$HOME althack/ros2:crystal-example-dev /build.sh `pwd`\n</code></pre>"},{"location":"examples/dev_release/#copy-install-targets-into-release-docker-image","title":"Copy install targets into release docker image","text":"<p>Build the release docker image that will copy the install targets into the image</p> <pre><code>docker build -f release.dockerfile -t ros2:crystal-example-release .\n</code></pre>"}]}